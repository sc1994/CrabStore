<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SqlHelper</name>
    </assembly>
    <members>
        <member name="T:SqlHelper.SqlHelper`1">
            <summary>
            sql 帮助类 方便sql 的增删改查 操作
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:SqlHelper.SqlHelper`1.#ctor">
            <summary>
            初始化实例
            </summary>
        </member>
        <member name="M:SqlHelper.SqlHelper`1.#ctor(System.String)">
            <summary>
            初始化实例 (传入表名: 适用与实体名和表名有差异的时候)
            </summary>
            <param name="tableName"></param>
        </member>
        <member name="M:SqlHelper.SqlHelper`1.#ctor(`0)">
            <summary>
            初始化实例(需要 实例对象)
            </summary>
            <param name="t"></param>
        </member>
        <member name="M:SqlHelper.SqlHelper`1.#ctor(`0,System.String)">
            <summary>
            初始化实例(需要 实例对象，主键)
            </summary>
            <param name="t"></param>
            <param name="primaryKey"></param>
        </member>
        <member name="M:SqlHelper.SqlHelper`1.#ctor(`0,System.String,System.String)">
            <summary>
            初始化实例(需要 实例对象，主键，自增键)
            </summary>
            <param name="t"></param>
            <param name="primaryKey"></param>
            <param name="identityKey"></param>
        </member>
        <member name="M:SqlHelper.SqlHelper`1.#ctor(`0,System.String,System.String,System.String)">
            <summary>
            初始化实例(需要 实例对象，主键，自增键，表名)
            </summary>
            <param name="t"></param>
            <param name="primaryKey"></param>
            <param name="identityKey"></param>
            <param name="tableName"></param>
        </member>
        <member name="P:SqlHelper.SqlHelper`1.IdentityKey">
            <summary>
            获取自增键
            </summary>
        </member>
        <member name="P:SqlHelper.SqlHelper`1.PrimaryKey">
            <summary>
            获取主键
            </summary>
        </member>
        <member name="P:SqlHelper.SqlHelper`1.Top">
            <summary>
            获取或设置 top 值
            </summary>
        </member>
        <member name="P:SqlHelper.SqlHelper`1.PageConfig">
            <summary>
            需要分页时的配置
            </summary>
        </member>
        <member name="P:SqlHelper.SqlHelper`1.Total">
            <summary>
            获取分页数据总数
            </summary>
        </member>
        <member name="P:SqlHelper.SqlHelper`1.SqlString">
            <summary>
            方便与排查异常
            </summary>
        </member>
        <member name="P:SqlHelper.SqlHelper`1.Alia">
            <summary>
            主表的别名 使用到AddJoin时,必选设置此属性
            </summary>
        </member>
        <member name="M:SqlHelper.SqlHelper`1.AddWhere(System.String)">
            <summary>
            添加条件 (不支持参数化)
            </summary>
            <param name="where">适用于复杂的添加关系,如 AND (x=x OR a=a)</param>
        </member>
        <member name="M:SqlHelper.SqlHelper`1.AddWhere(System.String,System.Object)">
            <summary>
            添加条件 
            </summary>
            <param name="field">字段</param>
            <param name="value">值</param>
        </member>
        <member name="M:SqlHelper.SqlHelper`1.AddWhere(System.String,System.Object,SqlHelper.RelationEnum)">
            <summary>
            添加条件 
            </summary>
            <param name="field">字段</param>
            <param name="value">值</param>
            <param name="relation">字段以及值之间的关系</param>
        </member>
        <member name="M:SqlHelper.SqlHelper`1.AddWhere(System.String,System.Object,SqlHelper.RelationEnum,SqlHelper.CoexistEnum)">
            <summary>
            添加条件 
            </summary>
            <param name="field">字段</param>
            <param name="value">值</param>
            <param name="relation">字段以及值之间的关系</param>
            <param name="coexist">此条件相对于之前条件之间的关系</param>
        </member>
        <member name="M:SqlHelper.SqlHelper`1.AddWhere(System.Enum,System.Object)">
            <summary>
            添加条件 
            </summary>
            <param name="field">字段</param>
            <param name="value">值</param>
        </member>
        <member name="M:SqlHelper.SqlHelper`1.AddWhere(System.Enum,System.Object,SqlHelper.RelationEnum)">
            <summary>
            添加条件 
            </summary>
            <param name="field">字段</param>
            <param name="value">值</param>
            <param name="relation">字段以及值之间的关系</param>
        </member>
        <member name="M:SqlHelper.SqlHelper`1.AddWhere(System.Enum,System.Object,SqlHelper.RelationEnum,SqlHelper.CoexistEnum)">
            <summary>
            添加条件 
            </summary>
            <param name="field">字段</param>
            <param name="value">值</param>
            <param name="relation">字段以及值之间的关系</param>
            <param name="coexist">此条件相对于之前条件之间的关系</param>
        </member>
        <member name="M:SqlHelper.SqlHelper`1.Insert">
            <summary>
            插入一条数据 (数据来自初始化传入的对象实体)
            </summary>
            <returns></returns>
        </member>
        <member name="M:SqlHelper.SqlHelper`1.Update(`0)">
            <summary>
            更新一条数据 (需要依赖主键)
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:SqlHelper.SqlHelper`1.AddUpdate(System.String,System.Object)">
            <summary>
            添加一项更新字段
            </summary>
            <param name="field">字段</param>
            <param name="value">值</param>
        </member>
        <member name="M:SqlHelper.SqlHelper`1.AddUpdate(System.String)">
            <summary>
            添加一项更新字段
            </summary>
            <param name="update">sql</param>
        </member>
        <member name="M:SqlHelper.SqlHelper`1.Update">
            <summary>
            执行更新(必须AddUpdate 必须AddWhere)
            </summary>
            <returns></returns>
        </member>
        <member name="M:SqlHelper.SqlHelper`1.Delete(System.String)">
            <summary>
            删除
            </summary>
            <param name="where">where条件 以AND开头</param>
            <returns></returns>
        </member>
        <member name="M:SqlHelper.SqlHelper`1.DeleteByPrimaryKey(System.Object)">
            <summary>
            依据主键删除一条数据
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:SqlHelper.SqlHelper`1.Delete">
            <summary>
            批量删除 (必须:AddWhere)
            </summary>
            <returns></returns>
        </member>
        <member name="M:SqlHelper.SqlHelper`1.AddShow(System.String)">
            <summary>
            添加显示字段
            </summary>
            <param name="shows"></param>
        </member>
        <member name="M:SqlHelper.SqlHelper`1.AddShow(System.Enum)">
            <summary>
            添加显示字段
            </summary>
            <param name="show"></param>
        </member>
        <member name="M:SqlHelper.SqlHelper`1.AddJoin(System.String)">
            <summary>
            添加表链接关系
            </summary>
            <param name="join"></param>
        </member>
        <member name="M:SqlHelper.SqlHelper`1.AddJoin(SqlHelper.JoinEnum,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            添加表连接关系
            </summary>
            <param name="relationJoin">连接关系</param>
            <param name="thatTable">另一个表</param>
            <param name="thatAlia">另一个别名</param>
            <param name="relationField">主关联字段</param>
            <param name="thatRelationField">另一个关联字段</param>
            <param name="where">链接之前的筛选(以AND开头)</param>
        </member>
        <member name="M:SqlHelper.SqlHelper`1.AddOrder(System.String)">
            <summary>
            添加排序字段
            </summary>
            <param name="order"></param>
        </member>
        <member name="M:SqlHelper.SqlHelper`1.AddOrder(System.String,SqlHelper.SortEnum)">
            <summary>
            添加排序字段
            </summary>
            <param name="field"></param>
            <param name="sort">排序关系</param>
        </member>
        <member name="M:SqlHelper.SqlHelper`1.AddOrder(System.Enum)">
            <summary>
            添加排序字段
            </summary>
            <param name="order"></param>
        </member>
        <member name="M:SqlHelper.SqlHelper`1.AddOrder(System.Enum,SqlHelper.SortEnum)">
            <summary>
            添加排序字段
            </summary>
            <param name="field"></param>
            <param name="sort">排序关系</param>
        </member>
        <member name="M:SqlHelper.SqlHelper`1.AddGroup(System.String)">
            <summary>
            添加分组
            </summary>
            <param name="field"></param>
        </member>
        <member name="M:SqlHelper.SqlHelper`1.Select">
            <summary>
            查询数据 (需要分页请先配置PageConfig)
            </summary>
            <returns></returns>
        </member>
        <member name="M:SqlHelper.SqlHelper`1.GetModelList(System.String,System.Object,System.String)">
            <summary>
            简单查询 (单个条件)
            </summary>
            <param name="field">筛选字段</param>
            <param name="value">筛选值</param>
            <param name="show">显示字段</param>
            <returns></returns>
        </member>
        <member name="M:SqlHelper.SqlHelper`1.GetModel(System.String,System.Object,System.String)">
            <summary>
            获取一条数据
            </summary>
            <param name="key">主键OR自增键</param>
            <param name="value">值</param>
            <param name="show">显示字段</param>
            <returns></returns>
        </member>
        <member name="M:SqlHelper.SqlHelper`1.GetModelListBySql(System.String)">
            <summary>
            直接执行一条SQL
            </summary>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="M:SqlHelper.SqlHelper`1.GetModelList(System.String,System.String)">
            <summary>
            获取数据列表
            </summary>
            <param name="where">条件(以 AND 开头)</param>
            <param name="show">显示字段</param>
            <returns></returns>
        </member>
        <member name="M:SqlHelper.SqlHelper`1.GetDynamic(System.String,System.String)">
            <summary>
            获取匿名对象
            </summary>
            <param name="where">条件(以 AND 开头)</param>
            <param name="show">显示字段</param>
            <returns></returns>
        </member>
        <member name="M:SqlHelper.SqlHelper`1.RemoveStrModel(System.String)">
            <summary>
            移除 T 后面可能出现的个别字符串
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:SqlHelper.PageConfig">
            <summary>
            分页配置
            </summary>
        </member>
        <member name="P:SqlHelper.PageConfig.PageIndex">
            <summary>
            当前页
            </summary>
        </member>
        <member name="P:SqlHelper.PageConfig.PageSize">
            <summary>
            页大小
            </summary>
        </member>
        <member name="P:SqlHelper.PageConfig.PageSortField">
            <summary>
            分页关键排序
            </summary>
        </member>
        <member name="P:SqlHelper.PageConfig.SortEnum">
            <summary>
            排序类型
            </summary>
        </member>
        <member name="P:SqlHelper.PageConfig.PageSortSql">
            <summary>
            多排序或者复杂排序用此字段
            </summary>
        </member>
        <member name="T:SqlHelper.RelationEnum">
            <summary>
            键值关系
            </summary>
        </member>
        <member name="F:SqlHelper.RelationEnum.Equal">
            <summary>
            等于
            </summary>
        </member>
        <member name="F:SqlHelper.RelationEnum.NotEqual">
            <summary>
            不等于
            </summary>
        </member>
        <member name="F:SqlHelper.RelationEnum.In">
            <summary>
            in
            </summary>
        </member>
        <member name="F:SqlHelper.RelationEnum.NotIn">
            <summary>
            NotIn
            </summary>
        </member>
        <member name="F:SqlHelper.RelationEnum.Greater">
            <summary>
            大于
            </summary>
        </member>
        <member name="F:SqlHelper.RelationEnum.GreaterEqual">
            <summary>
            大于等于
            </summary>
        </member>
        <member name="F:SqlHelper.RelationEnum.Less">
            <summary>
            小于
            </summary>
        </member>
        <member name="F:SqlHelper.RelationEnum.LessEqual">
            <summary>
            小于等于
            </summary>
        </member>
        <member name="F:SqlHelper.RelationEnum.Like">
            <summary>
            匹配
            </summary>
        </member>
        <member name="F:SqlHelper.RelationEnum.RightLike">
            <summary>
            右匹配
            </summary>
        </member>
        <member name="F:SqlHelper.RelationEnum.LeftLike">
            <summary>
            左匹配
            </summary>
        </member>
        <member name="F:SqlHelper.RelationEnum.IsNull">
            <summary>
            是
            </summary>
        </member>
        <member name="F:SqlHelper.RelationEnum.IsNotNull">
            <summary>
            不是
            </summary>
        </member>
        <member name="T:SqlHelper.CoexistEnum">
            <summary>
            向前条件的并存关系
            </summary>
        </member>
        <member name="F:SqlHelper.CoexistEnum.And">
            <summary>
            AND 关系
            </summary>
        </member>
        <member name="F:SqlHelper.CoexistEnum.Or">
            <summary>
            OR 关系
            </summary>
        </member>
        <member name="T:SqlHelper.SortEnum">
            <summary>
            排序关系
            </summary>
        </member>
        <member name="F:SqlHelper.SortEnum.Asc">
            <summary>
            正序
            </summary>
        </member>
        <member name="F:SqlHelper.SortEnum.Desc">
            <summary>
            倒序
            </summary>
        </member>
        <member name="T:SqlHelper.JoinEnum">
            <summary>
            表链接 关系
            </summary>
        </member>
        <member name="F:SqlHelper.JoinEnum.Join">
            <summary>
            链接
            </summary>
        </member>
        <member name="F:SqlHelper.JoinEnum.InnerJoin">
            <summary>
            链接
            </summary>
        </member>
        <member name="F:SqlHelper.JoinEnum.LeftJoin">
            <summary>
            左链接
            </summary>
        </member>
        <member name="F:SqlHelper.JoinEnum.RightJoin">
            <summary>
            有链接
            </summary>
        </member>
        <member name="T:SqlHelper.ErrorEnum">
            <summary>
            错误枚举
            </summary>
        </member>
        <member name="F:SqlHelper.ErrorEnum.E1000">
            <summary>
            当前表结构缺少PrimaryKey
            </summary>
        </member>
        <member name="F:SqlHelper.ErrorEnum.E1001">
            <summary>
            当前操作必须传入条件限制
            </summary>
        </member>
        <member name="F:SqlHelper.ErrorEnum.E1002">
            <summary>
            当前操作必须传入UPDATE字段和值
            </summary>
        </member>
        <member name="F:SqlHelper.ErrorEnum.E1003">
            <summary>
            当您尝试 JOIN 时,请先设置 Alia 值
            </summary>
        </member>
        <member name="T:SqlHelper.DbClient">
            <summary>
            数据库操作类
            </summary>
        </member>
        <member name="M:SqlHelper.DbClient.Query``1(System.String,System.Object)">
            <summary>
            执行带参查询
            </summary>
            <typeparam name="T"></typeparam>
            <param name="sql"></param>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:SqlHelper.DbClient.Excute(System.String,System.Object,System.Data.IDbTransaction)">
            <summary>
            执行受影响行数 的 sql
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="transaction"></param>
            <returns></returns>
        </member>
        <member name="M:SqlHelper.DbClient.ExecuteScalar``1(System.String,System.Object)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="sql"></param>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:SqlHelper.DbClient.ExecuteScalarProc``1(System.String,System.Object)">
            <summary>
            执行带参数的存储过程
            </summary>
            <typeparam name="T"></typeparam>
            <param name="strProcName"></param>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:SqlHelper.DbClient.ExecuteQueryProc``1(System.String,System.Object)">
            <summary>
            执行带参数的存储过程(查询)
            </summary>
            <param name="strProcName"></param>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:SqlHelper.DbClient.ExecuteProc(System.String,System.Object)">
            <summary>
            执行带参数的存储过程
            </summary>
            <param name="strProcName"></param>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="T:SqlHelper.DataSource">
            <summary>
            数据源
            </summary>
        </member>
        <member name="M:SqlHelper.DataSource.GetConnection">
            <summary>
            连接池
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
